const { isArray } = Array;
const { floor } = Math;
export default function unflat(value, size = 2, fill) {
    if (!isArray(value)) {
        throw new Error(`value parameter must be an array.`);
    }
    if (typeof size !== 'number' || size < 1) {
        throw new Error(`size parameter must be a positive number.`);
    }
    const unflattened = [];
    for (let i = 0; i < value.length; i += floor(size)) {
        const slice = value.slice(i, i + size);
        for (; size - slice.length;) {
            slice.push(fill);
        }
        unflattened.push(slice);
    }
    return unflattened;
}
//# sourceMappingURL=unflat.js.map