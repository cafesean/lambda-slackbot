{
  "version": 3,
  "sources": ["../../../src/controllers/gpt.js"],
  "sourcesContent": ["\"use strict\";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// dev/controllers/gpt.ts\nvar gpt_exports = {};\n__export(gpt_exports, {\n  default: () => gptController\n});\nmodule.exports = __toCommonJS(gpt_exports);\nvar import_axios = __toESM(require(\"axios\"));\nvar import_dotenv = __toESM(require(\"dotenv\"));\nimport_dotenv.default.config();\nasync function gptController(fastify) {\n  fastify.get(\n    \"/\",\n    async (request, reply) => {\n      return { result: \"gpt-api-v1\" };\n    }\n  );\n  fastify.get(\n    \"/:test\",\n    async (request, reply) => {\n      return { result: \"test\" };\n    }\n  );\n  fastify.post(\n    \"/:engine\",\n    async (request, reply) => {\n      const { engine } = request.params;\n      const { prompt, temperature, max_tokens } = request.body;\n      var resultJSON = {};\n      var objJSON = {\n        \"prompt\": prompt,\n        \"temperature\": temperature,\n        \"max_tokens\": max_tokens\n      };\n      var temp = process.env.TEMPERATURE;\n      var tok = process.env.MAX_TOKENS;\n      if (objJSON.temperature < 1) {\n        temp = objJSON.temperature;\n      }\n      if (objJSON.max_tokens < 1e3) {\n        tok = objJSON.max_tokens;\n      }\n      const apiUrl = \"https://api.openai.com/v1/engines/\" + engine + \"/completions\";\n      const data = {\n        prompt: objJSON.prompt,\n        max_tokens: tok,\n        temperature: temp\n      };\n      const options = {\n        headers: {\n          \"Content-Type\": `application/json`,\n          \"Authorization\": \"Bearer \" + process.env.OPENAI_API_KEY\n        }\n      };\n      await import_axios.default.post(apiUrl, data, options).then((response) => {\n        resultJSON[\"completion\"] = response.data.choices[0].text;\n      }).catch((error) => {\n        reply.send(error);\n      });\n      return JSON.stringify(resultJSON);\n    }\n  );\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {});\n"],
  "mappings": ";AACA,IAAI,WAAW,OAAO;AACtB,IAAI,YAAY,OAAO;AACvB,IAAI,mBAAmB,OAAO;AAC9B,IAAI,oBAAoB,OAAO;AAC/B,IAAI,eAAe,OAAO;AAC1B,IAAI,eAAe,OAAO,UAAU;AACpC,IAAI,WAAW,CAAC,QAAQ,QAAQ;AAC9B,WAAS,QAAQ;AACf,cAAU,QAAQ,MAAM,EAAE,KAAK,IAAI,OAAO,YAAY;AAAA;AAE1D,IAAI,cAAc,CAAC,IAAI,MAAM,QAAQ,SAAS;AAC5C,MAAI,QAAQ,OAAO,SAAS,YAAY,OAAO,SAAS,YAAY;AAClE,aAAS,OAAO,kBAAkB;AAChC,UAAI,CAAC,aAAa,KAAK,IAAI,QAAQ,QAAQ;AACzC,kBAAU,IAAI,KAAK,EAAE,KAAK,MAAM,KAAK,MAAM,YAAY,CAAE,QAAO,iBAAiB,MAAM,SAAS,KAAK;AAAA;AAE3G,SAAO;AAAA;AAET,IAAI,UAAU,CAAC,KAAK,YAAY,WAAY,UAAS,OAAO,OAAO,SAAS,aAAa,QAAQ,IAAI,YACnG,cAAc,CAAC,OAAO,CAAC,IAAI,aAAa,UAAU,QAAQ,WAAW,EAAE,OAAO,KAAK,YAAY,UAAU,QACzG;AAEF,IAAI,eAAe,CAAC,QAAQ,YAAY,UAAU,IAAI,cAAc,EAAE,OAAO,SAAS;AAGtF,IAAI,cAAc;AAClB,SAAS,aAAa;AAAA,EACpB,SAAS,MAAM;AAAA;AAEjB,OAAO,UAAU,aAAa;AAC9B,IAAI,eAAe,QAAQ,QAAQ;AACnC,IAAI,gBAAgB,QAAQ,QAAQ;AACpC,cAAc,QAAQ;AACtB,6BAA6B,SAAS;AACpC,UAAQ,IACN,KACA,OAAO,SAAS,UAAU;AACxB,WAAO,EAAE,QAAQ;AAAA;AAGrB,UAAQ,IACN,UACA,OAAO,SAAS,UAAU;AACxB,WAAO,EAAE,QAAQ;AAAA;AAGrB,UAAQ,KACN,YACA,OAAO,SAAS,UAAU;AACxB,UAAM,EAAE,WAAW,QAAQ;AAC3B,UAAM,EAAE,QAAQ,aAAa,eAAe,QAAQ;AACpD,QAAI,aAAa;AACjB,QAAI,UAAU;AAAA,MACZ,UAAU;AAAA,MACV,eAAe;AAAA,MACf,cAAc;AAAA;AAEhB,QAAI,OAAO,QAAQ,IAAI;AACvB,QAAI,MAAM,QAAQ,IAAI;AACtB,QAAI,QAAQ,cAAc,GAAG;AAC3B,aAAO,QAAQ;AAAA;AAEjB,QAAI,QAAQ,aAAa,KAAK;AAC5B,YAAM,QAAQ;AAAA;AAEhB,UAAM,SAAS,uCAAuC,SAAS;AAC/D,UAAM,OAAO;AAAA,MACX,QAAQ,QAAQ;AAAA,MAChB,YAAY;AAAA,MACZ,aAAa;AAAA;AAEf,UAAM,UAAU;AAAA,MACd,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,iBAAiB,YAAY,QAAQ,IAAI;AAAA;AAAA;AAG7C,UAAM,aAAa,QAAQ,KAAK,QAAQ,MAAM,SAAS,KAAK,CAAC,aAAa;AACxE,iBAAW,gBAAgB,SAAS,KAAK,QAAQ,GAAG;AAAA,OACnD,MAAM,CAAC,UAAU;AAClB,YAAM,KAAK;AAAA;AAEb,WAAO,KAAK,UAAU;AAAA;AAAA;AAK5B;",
  "names": []
}
