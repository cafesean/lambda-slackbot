{
  "version": 3,
  "sources": ["../../../dev/controllers/gpt.ts"],
  "sourcesContent": ["import axios from 'axios';\nimport { FastifyInstance } from 'fastify';\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\n\ninterface JSONObject {\n    [key: string]: any\n}\n\nexport default async function gptController(fastify: FastifyInstance) {\n\tfastify.get(\n\t\t'/',\n\t\tasync (request, reply) => {\n\t\t\t\n\t\t\treturn { result: \"gpt-api-v1\" };\n\t\t}\n\t)\n\tfastify.get(\n\t\t'/:test',\n\t\tasync (request, reply) => {\n\t\t\t\n\t\t\treturn { result: \"test\" };\n\t\t}\n\t)\n\n    fastify.post('/:engine', \n\t\tasync (request: any, reply: any) => {\n\t\t\tconst { engine } = request.params;\n\t\t\tconst { prompt, temperature, max_tokens } = request.body;\n        \tvar resultJSON: JSONObject = {};\n\t\t\t\n\t\t\tvar objJSON = {\n\t\t\t\t\"prompt\": prompt,\n\t\t\t\t\"temperature\": temperature,\n\t\t\t\t\"max_tokens\": max_tokens\n\t\t\t};\n\n\t\t\tvar temp = process.env.TEMPERATURE;\n\t\t\tvar tok = process.env.MAX_TOKENS;\n\t\t\t\n\t\t\tif (objJSON.temperature < 1) {\n\t\t\t\ttemp = objJSON.temperature;\n\t\t\t}\n\t\t\tif (objJSON.max_tokens < 1000) {\n\t\t\t\ttok = objJSON.max_tokens;\n\t\t\t}\n\n\t\t\tconst apiUrl = 'https://api.openai.com/v1/engines/' + engine + '/completions';\n\n\t\t\tconst data = {\n\t\t\t\tprompt: objJSON.prompt,\n\t\t\t\tmax_tokens: tok,\n\t\t\t\ttemperature: temp,\n\t\t\t};\n\t\t\tconst options = {\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": `application/json`,\n\t\t\t\t\t\"Authorization\": \"Bearer \" + process.env.OPENAI_API_KEY,\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// var completion = \"\";\n\t\t\tawait axios\n\t\t\t\t.post(apiUrl, data, options)\n\t\t\t\t.then(response => {\n\t\t\t\t\tresultJSON[\"completion\"] = response.data.choices[0].text \n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\treply.send(error);\n\t\t\t});\n\t\t\treturn JSON.stringify(resultJSON);\n\t\t});\n\t}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAElB,oBAAmB;AAEnB,sBAAO;AAOP,6BAA4C,SAA0B;AACrE,UAAQ,IACP,KACA,OAAO,SAAS,UAAU;AAEzB,WAAO,EAAE,QAAQ;AAAA;AAGnB,UAAQ,IACP,UACA,OAAO,SAAS,UAAU;AAEzB,WAAO,EAAE,QAAQ;AAAA;AAIhB,UAAQ,KAAK,YACf,OAAO,SAAc,UAAe;AACnC,UAAM,EAAE,WAAW,QAAQ;AAC3B,UAAM,EAAE,QAAQ,aAAa,eAAe,QAAQ;AAC9C,QAAI,aAAyB;AAEnC,QAAI,UAAU;AAAA,MACb,UAAU;AAAA,MACV,eAAe;AAAA,MACf,cAAc;AAAA;AAGf,QAAI,OAAO,QAAQ,IAAI;AACvB,QAAI,MAAM,QAAQ,IAAI;AAEtB,QAAI,QAAQ,cAAc,GAAG;AAC5B,aAAO,QAAQ;AAAA;AAEhB,QAAI,QAAQ,aAAa,KAAM;AAC9B,YAAM,QAAQ;AAAA;AAGf,UAAM,SAAS,uCAAuC,SAAS;AAE/D,UAAM,OAAO;AAAA,MACZ,QAAQ,QAAQ;AAAA,MAChB,YAAY;AAAA,MACZ,aAAa;AAAA;AAEd,UAAM,UAAU;AAAA,MACf,SAAS;AAAA,QACR,gBAAgB;AAAA,QAChB,iBAAiB,YAAY,QAAQ,IAAI;AAAA;AAAA;AAK3C,UAAM,qBACJ,KAAK,QAAQ,MAAM,SACnB,KAAK,cAAY;AACjB,iBAAW,gBAAgB,SAAS,KAAK,QAAQ,GAAG;AAAA,OAEpD,MAAM,WAAS;AACf,YAAM,KAAK;AAAA;AAEb,WAAO,KAAK,UAAU;AAAA;AAAA;",
  "names": []
}
