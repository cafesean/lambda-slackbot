{
  "version": 3,
  "sources": ["../../../dev/components/gpt.ts"],
  "sourcesContent": ["import axios from 'axios';\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\n\nexport async function gpt(prompt: string) {\n\n  const engine = \"text-davinci-003\"\n  var temperature = new Number(process.env.TEMPERATURE);\n  var tokens = new Number(process.env.MAX_TOKENS);\n\n  const url = 'https://api.openai.com/v1/engines/' + engine + '/completions';\n\n  const data = {\n    prompt: prompt,\n    max_tokens: tokens,\n    temperature: temperature,\n  };\n  const options = {\n    headers: {\n      \"Content-Type\": `application/json`,\n      \"Authorization\": \"Bearer \" + process.env.OPENAI_API_KEY,\n    }\n  };\n\n  return new Promise(async (resolve, reject) => {\n    await axios\n      .post(url, data, options)\n      .then(response => {\n        resolve(response.data.choices[0].text);\n        // console.log(\"data: \", response.data.choices[0].text);\n      })\n      .catch(error => {\n        // console.log(\"error: \", error);\n        reject(error);\n      });\n  });\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAClB,oBAAmB;AAEnB,sBAAO;AAGP,mBAA0B,QAAgB;AAExC,QAAM,SAAS;AACf,MAAI,cAAc,IAAI,OAAO,QAAQ,IAAI;AACzC,MAAI,SAAS,IAAI,OAAO,QAAQ,IAAI;AAEpC,QAAM,MAAM,uCAAuC,SAAS;AAE5D,QAAM,OAAO;AAAA,IACX;AAAA,IACA,YAAY;AAAA,IACZ;AAAA;AAEF,QAAM,UAAU;AAAA,IACd,SAAS;AAAA,MACP,gBAAgB;AAAA,MAChB,iBAAiB,YAAY,QAAQ,IAAI;AAAA;AAAA;AAI7C,SAAO,IAAI,QAAQ,OAAO,SAAS,WAAW;AAC5C,UAAM,qBACH,KAAK,KAAK,MAAM,SAChB,KAAK,cAAY;AAChB,cAAQ,SAAS,KAAK,QAAQ,GAAG;AAAA,OAGlC,MAAM,WAAS;AAEd,aAAO;AAAA;AAAA;AAAA;",
  "names": []
}
