{
  "version": 3,
  "sources": ["../../../dev/components/gpt35.ts"],
  "sourcesContent": ["import dotenv from 'dotenv';\n\ndotenv.config();\n\nimport { Configuration, OpenAIApi } from \"openai\";\n\nconst configuration = new Configuration({\n  apiKey: process.env.OPENAI_API_KEY,\n});\n\nconst openai = new OpenAIApi(configuration);\n\nexport async function gpt(prompt: string, threadMessages: any) {\n  const model = \"gpt-4\"\n  const promptObj = {\n    role: \"user\",\n    content: prompt\n  }\n  const messageArr = [promptObj];\n\n  // const comp = await openai.createChatCompletion({\n  //   model: \"gpt-3.5-turbo\",\n  //   messages: [{ \"role\": \"assistant\", \"content\": \"You are a helpful assistant with deep experience in technology, software development, system architecture, and cloud infrastructure.\" }].concat(messageArr)\n  // })\n\n\n  return new Promise(async (resolve, reject) => {\n    await openai.createChatCompletion({\n      model: model,\n      messages: [{ \"role\": \"assistant\", \"content\": \"You are a helpful assistant with deep experience in technology, software development, system architecture, and cloud infrastructure.\" }].concat(threadMessages ? threadMessages : messageArr)\n    })\n      .then(completion => {\n        resolve(completion.data.choices[0].message?.content);\n        console.log(\"Completion: \", completion.data.choices[0].message?.content);\n      })\n      .catch(error => {\n        // console.log(\"error: \", error);\n        reject(error);\n      });\n  });\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,oBAAmB;AAInB,oBAAyC;AAFzC,sBAAO;AAIP,MAAM,gBAAgB,IAAI,4BAAc;AAAA,EACtC,QAAQ,QAAQ,IAAI;AAAA;AAGtB,MAAM,SAAS,IAAI,wBAAU;AAE7B,mBAA0B,QAAgB,gBAAqB;AAC7D,QAAM,QAAQ;AACd,QAAM,YAAY;AAAA,IAChB,MAAM;AAAA,IACN,SAAS;AAAA;AAEX,QAAM,aAAa,CAAC;AAQpB,SAAO,IAAI,QAAQ,OAAO,SAAS,WAAW;AAC5C,UAAM,OAAO,qBAAqB;AAAA,MAChC;AAAA,MACA,UAAU,CAAC,EAAE,QAAQ,aAAa,WAAW,0IAA0I,OAAO,iBAAiB,iBAAiB;AAAA,OAE/N,KAAK,gBAAc;AA/B1B;AAgCQ,cAAQ,iBAAW,KAAK,QAAQ,GAAG,YAA3B,mBAAoC;AAC5C,cAAQ,IAAI,gBAAgB,iBAAW,KAAK,QAAQ,GAAG,YAA3B,mBAAoC;AAAA,OAEjE,MAAM,WAAS;AAEd,aAAO;AAAA;AAAA;AAAA;",
  "names": []
}
